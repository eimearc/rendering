surface scratch(
    float s = 0 [[int lockgeom = 0]], // Use s attached to geo.
    float t = 0 [[int lockgeom = 0]], // Use t attached to geo.
    color Cin=1,
    color logo=2,
    output color Cout=1,
    output float mag=0
)
{
    float i;
    float freq=1.0;
    for(i=0;i<8;i+=1)
    {   
        mag+=abs((float)noise("perlin",s*freq,t*freq))/freq;
        freq*=2.1;
    }   
    mag=smoothstep(0.01,0.15,mag);
    mag=clamp(mag, 0, 1);
    float mask=(float)noise("uperlin",s*100,t*100);
    mask+=(float)noise("uperlin",s*100*1.1,t*100*1.1);
    mask+=(float)noise("uperlin",s*100*3.3,t*100*3.3)/2.0;
    mask=clamp(mask,0,1);
    float spots = max(mag,mask);

    int t_freq = 1;
    mag=0;
    freq=1;
    point uv = point(s,t,0);
    uv=rotate(uv, 30, vector(0,0,0), vector(0,1,1));
    float _s=uv[0];
    float _t=uv[1];
    _t*=40;
    float scratches1=abs((float)noise("perlin",_s,_t*t_freq));
    scratches1=smoothstep(0.007,0.01,scratches1);
    point PP = point(P);
    mask=(float)noise("uperlin",PP/2);
    mask+=(float)noise("uperlin",PP);
    mask+=(float)noise("uperlin",PP*2.1)/2.1;
    mask=clamp(mask,0,1);
    mask=smoothstep(0.8,0.9,mask);
    scratches1=max(mask,scratches1);

    uv=rotate(uv, -40, vector(0,0,0), vector(0,1,1));
    _s=uv[0];
    _t=uv[1];
    PP+=point(1,1,1);
    float scratches2=abs((float)noise("perlin",_s*0.1,_t*t_freq*4));
    scratches2=smoothstep(0.005,0.01,scratches2);
    mask=(float)noise("uperlin",PP/2.1);
    mask+=(float)noise("uperlin",PP);
    mask+=(float)noise("uperlin",PP*3.5)/3.5;
    mask=clamp(mask,0,1);
    mask=smoothstep(0.7,0.8,mask);
    scratches2=max(mask,scratches2);

    color c = min(scratches1,scratches2);
    c=min(spots,c);
    c=max(Cin,c);

    Cout=min(c,logo);
}