surface scratch(
    float s = 0 [[int lockgeom = 0]], // Use s attached to geo.
    float t = 0 [[int lockgeom = 0]], // Use t attached to geo.
    color Cin=1,
    output color Cout=1,
    output float mag=0
)
{
    float i;
    float freq=1.9;
    for(i=0;i<8;i+=1)
    {   
        mag+=abs((float)noise("perlin",s*freq,t*freq))/freq;
        freq*=2.1;
    }   
    mag=smoothstep(0.05,0.15,mag);
    mag=clamp(mag, 0, 1);
    float mask=(float)noise("uperlin",s*100,t*100);
    mask+=(float)noise("uperlin",s*100*1.1,t*100*1.1);
    mask+=(float)noise("uperlin",s*100*3.3,t*100*3.3)/2.0;
    mask=clamp(mask,0,1);
    float spots = max(mag,mask);

    int t_freq = 20;
    mag=0;
    freq=1;
    point uv = point(s,t,0);
    uv=rotate(uv, 30, vector(0,0,0), vector(0,1,1));
    float _s=uv[0];
    float _t=uv[1];
    float scratches1=abs((float)noise("perlin",_s*0.1,_t*t_freq));
    scratches1=smoothstep(0,0.007,scratches1);
    mask=(float)noise("uperlin",s*3,t*3);
    mask+=(float)noise("uperlin",s*4,t*4);
    mask*=2;
    mask=clamp(mask,0,1);
    scratches1=max(mask,scratches1);

    uv=rotate(uv, -40, vector(0,0,0), vector(0,1,1));
    _s=uv[0];
    _t=uv[1];
    float scratches2=abs((float)noise("perlin",_s*0.1,_t*t_freq*2));
    scratches2=smoothstep(0,0.007,scratches2);
    mask=(float)noise("uperlin",s*2.1,t*3.5);
    mask+=(float)noise("uperlin",s*4.1,t*5.2)*0.5;
    mask*=1.5;
    mask=clamp(mask,0,1);
    scratches2=max(mask,scratches2);

    // color c = min(scratches1,scratches2);
    // c=min(scratches,c);
    Cout=max(Cin,spots);
}